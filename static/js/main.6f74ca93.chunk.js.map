{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactsList/ContactsList.module.scss","App.module.scss","components/Container/Container.module.scss","components/Filter/Filter.module.scss","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","handleFilter","items","createReducer","saveContacts","actions","state","action","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","rootReducer","contacts","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","getContacts","getFilter","handleFilteredContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","find","alert","type","pattern","title","onChange","required","btn","Filter","event","target","ContactsList","friends","list","map","onClick","App","subtitle","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6f74ca93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2hzR2\",\"btn\":\"ContactForm_btn__2qgyk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__13WdR\",\"btn\":\"ContactsList_btn__1ELhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__Gy4EL\",\"subtitle\":\"App_subtitle__1Pqbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Gr6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__qNef_\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name, number) => {\n  return {\n    payload: {\n      name: name,\n      number,\n      id: uuidv4(),\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/delete');\n\nconst handleFilter = createAction('contscts/filter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  addContact,\n  deleteContact,\n  handleFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\nimport saveContacts from '../../data/saveContacts.json';\n\nconst items = createReducer(saveContacts, {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.handleFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './Phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const handleFilteredContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const handleName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (handleName) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    dispatch(actions.addContact(name, number));\n    return reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n      <label>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport styles from './Filter.module.scss';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.find}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.handleFilter(event.target.value))}\n      />\n    </label>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport { handleFilteredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport PropTypes from 'prop-types';\nimport styles from './ContactsList.module.scss';\n\nexport default function ContactsList() {\n  const friends = useSelector(handleFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.list}>\n      {friends.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactsList';\nimport styles from './App.module.scss';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.subtitle}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}